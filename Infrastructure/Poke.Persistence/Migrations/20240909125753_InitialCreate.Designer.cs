// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Poke.Persistence.Context;

#nullable disable

namespace Poke.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240909125753_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CategoryProduct", b =>
                {
                    b.Property<int>("CategoriesId")
                        .HasColumnType("int");

                    b.Property<int>("ProductsId")
                        .HasColumnType("int");

                    b.HasKey("CategoriesId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("CategoryProduct");
                });

            modelBuilder.Entity("Poke.Domain.Entities.PokeCenter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("PokeCenters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedTime = new DateTime(2024, 9, 9, 15, 57, 53, 227, DateTimeKind.Local).AddTicks(6550),
                            IsDeleted = false,
                            Name = "Automotive & Toys"
                        },
                        new
                        {
                            Id = 2,
                            CreatedTime = new DateTime(2024, 9, 9, 15, 57, 53, 227, DateTimeKind.Local).AddTicks(6563),
                            IsDeleted = false,
                            Name = "Tools & Grocery"
                        },
                        new
                        {
                            Id = 3,
                            CreatedTime = new DateTime(2024, 9, 9, 15, 57, 53, 227, DateTimeKind.Local).AddTicks(6581),
                            IsDeleted = false,
                            Name = "Games, Clothing & Garden"
                        });
                });

            modelBuilder.Entity("Poke.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedTime = new DateTime(2024, 9, 9, 15, 57, 53, 227, DateTimeKind.Local).AddTicks(8514),
                            IsDeleted = false,
                            Name = "Elektrik",
                            ParentId = 0,
                            Priority = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedTime = new DateTime(2024, 9, 9, 15, 57, 53, 227, DateTimeKind.Local).AddTicks(8516),
                            IsDeleted = false,
                            Name = "Moda",
                            ParentId = 0,
                            Priority = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedTime = new DateTime(2024, 9, 9, 15, 57, 53, 227, DateTimeKind.Local).AddTicks(8517),
                            IsDeleted = false,
                            Name = "Bilgisayar",
                            ParentId = 1,
                            Priority = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedTime = new DateTime(2024, 9, 9, 15, 57, 53, 227, DateTimeKind.Local).AddTicks(8519),
                            IsDeleted = false,
                            Name = "Kadın",
                            ParentId = 2,
                            Priority = 1
                        });
                });

            modelBuilder.Entity("Poke.Domain.Entities.Detail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Details");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedTime = new DateTime(2024, 9, 9, 15, 57, 53, 229, DateTimeKind.Local).AddTicks(9453),
                            Description = "İllo qui eve gülüyorum yazın.",
                            IsDeleted = false,
                            Title = "Adipisci."
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 3,
                            CreatedTime = new DateTime(2024, 9, 9, 15, 57, 53, 229, DateTimeKind.Local).AddTicks(9483),
                            Description = "Batarya aspernatur dergi quasi kalemi.",
                            IsDeleted = false,
                            Title = "Quia balıkhaneye."
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 4,
                            CreatedTime = new DateTime(2024, 9, 9, 15, 57, 53, 229, DateTimeKind.Local).AddTicks(9511),
                            Description = "Bahar commodi batarya layıkıyla için.",
                            IsDeleted = false,
                            Title = "Vel laboriosam ut."
                        });
                });

            modelBuilder.Entity("Poke.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PokeCenterId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PokeCenterId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PokeCenterId = 1,
                            CreatedTime = new DateTime(2024, 9, 9, 15, 57, 53, 231, DateTimeKind.Local).AddTicks(9250),
                            Description = "The Nagasaki Lander is the trademarked name of several series of Nagasaki sport bikes, that started with the 1984 ABC800J",
                            Discount = 7.260179427675610m,
                            IsDeleted = false,
                            Price = 285.33m,
                            Title = "Intelligent Plastic Tuna"
                        },
                        new
                        {
                            Id = 2,
                            PokeCenterId = 2,
                            CreatedTime = new DateTime(2024, 9, 9, 15, 57, 53, 231, DateTimeKind.Local).AddTicks(9279),
                            Description = "Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support",
                            Discount = 1.703580337274120m,
                            IsDeleted = false,
                            Price = 837.43m,
                            Title = "Ergonomic Granite Ball"
                        },
                        new
                        {
                            Id = 3,
                            PokeCenterId = 3,
                            CreatedTime = new DateTime(2024, 9, 9, 15, 57, 53, 231, DateTimeKind.Local).AddTicks(9332),
                            Description = "The beautiful range of Apple Naturalé that has an exciting mix of natural ingredients. With the Goodness of 100% Natural Ingredients",
                            Discount = 4.690266704914470m,
                            IsDeleted = false,
                            Price = 600.22m,
                            Title = "Handmade Plastic Gloves"
                        });
                });

            modelBuilder.Entity("CategoryProduct", b =>
                {
                    b.HasOne("Poke.Domain.Entities.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Poke.Domain.Entities.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Poke.Domain.Entities.Detail", b =>
                {
                    b.HasOne("Poke.Domain.Entities.Category", "Category")
                        .WithMany("Details")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Poke.Domain.Entities.Product", b =>
                {
                    b.HasOne("Poke.Domain.Entities.PokeCenter", "PokeCenter")
                        .WithMany()
                        .HasForeignKey("PokeCenterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PokeCenter");
                });

            modelBuilder.Entity("Poke.Domain.Entities.Category", b =>
                {
                    b.Navigation("Details");
                });
#pragma warning restore 612, 618
        }
    }
}
